{"version":3,"sources":["../../src/common/pubKey.ts"],"sourcesContent":["import { TOKEN_PROGRAM_ID } from \"@solana/spl-token\";\nimport { AccountMeta, PublicKey, SystemProgram, SYSVAR_RENT_PUBKEY } from \"@solana/web3.js\";\n\ninterface AccountMetaProps {\n  pubkey: PublicKey;\n  isSigner?: boolean;\n  isWritable?: boolean;\n}\n\nexport function accountMeta({ pubkey, isSigner = false, isWritable = true }: AccountMetaProps): AccountMeta {\n  return {\n    pubkey,\n    isWritable,\n    isSigner,\n  };\n}\n\nexport const commonSystemAccountMeta = [\n  accountMeta({ pubkey: TOKEN_PROGRAM_ID, isWritable: false }),\n  accountMeta({ pubkey: SystemProgram.programId, isWritable: false }),\n  accountMeta({ pubkey: SYSVAR_RENT_PUBKEY, isWritable: false }),\n];\n\nexport type PublicKeyish = PublicKey | string;\n\nexport function validateAndParsePublicKey({\n  publicKey: orgPubKey,\n  transformSol,\n}: {\n  publicKey: PublicKeyish;\n  transformSol?: boolean;\n}): PublicKey {\n  const publicKey = tryParsePublicKey(orgPubKey.toString());\n\n  if (publicKey instanceof PublicKey) {\n    if (transformSol && publicKey.equals(SOLMint)) return WSOLMint;\n    return publicKey;\n  }\n\n  if (transformSol && publicKey.toString() === SOLMint.toBase58()) return WSOLMint;\n\n  if (typeof publicKey === \"string\") {\n    if (publicKey === PublicKey.default.toBase58()) return PublicKey.default;\n    try {\n      const key = new PublicKey(publicKey);\n      return key;\n    } catch {\n      throw new Error(\"invalid public key\");\n    }\n  }\n\n  throw new Error(\"invalid public key\");\n}\n\nexport function tryParsePublicKey(v: string): PublicKey | string {\n  try {\n    return new PublicKey(v);\n  } catch (e) {\n    return v;\n  }\n}\n\nexport const MEMO_PROGRAM_ID = new PublicKey(\"MemoSq4gqABAXKb96qnH8TysNcWxMyWCqXgDLGmfcHr\");\nexport const MEMO_PROGRAM_ID2 = new PublicKey(\"MemoSq4gqABAXKb96qnH8TysNcWxMyWCqXgDLGmfcHr\");\nexport const RENT_PROGRAM_ID = new PublicKey(\"SysvarRent111111111111111111111111111111111\");\nexport const CLOCK_PROGRAM_ID = new PublicKey(\"SysvarC1ock11111111111111111111111111111111\");\nexport const METADATA_PROGRAM_ID = new PublicKey(\"metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s\");\nexport const INSTRUCTION_PROGRAM_ID = new PublicKey(\"Sysvar1nstructions1111111111111111111111111\");\nexport const SYSTEM_PROGRAM_ID = SystemProgram.programId;\n\nexport const RAYMint = new PublicKey(\"4k3Dyjzvzp8eMZWUXbBCjEvwSkkk59S5iCNLY3QrkX6R\");\nexport const PAIMint = new PublicKey(\"Ea5SjE2Y6yvCeW5dYTn7PYMuW5ikXkvbGdcmSnXeaLjS\");\nexport const SRMMint = new PublicKey(\"SRMuApVNdxXokk5GT7XD5cUUgXMBCoAz2LHeuAoKWRt\");\nexport const USDCMint = new PublicKey(\"EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v\");\nexport const USDTMint = new PublicKey(\"Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB\");\nexport const mSOLMint = new PublicKey(\"mSoLzYCxHdYgdzU16g5QSh3i5K3z3KZK7ytfqcJm7So\");\nexport const stSOLMint = new PublicKey(\"7dHbWXmci3dT8UFYWYZweBLXgycu7Y3iL6trKn1Y7ARj\");\nexport const USDHMint = new PublicKey(\"USDH1SM1ojwWUga67PGrgFWUHibbjqMvuMaDkRJTgkX\");\nexport const NRVMint = new PublicKey(\"NRVwhjBQiUPYtfDT5zRBVJajzFQHaBUNtC7SNVvqRFa\");\nexport const ANAMint = new PublicKey(\"ANAxByE6G2WjFp7A4NqtWYXb3mgruyzZYg3spfxe6Lbo\");\nexport const ETHMint = new PublicKey(\"7vfCXTUXx5WJV5JADk17DUJ4ksgau7utNKj4b963voxs\");\nexport const WSOLMint = new PublicKey(\"So11111111111111111111111111111111111111112\");\nexport const SOLMint = PublicKey.default;\n\nexport function solToWSol(mint: PublicKeyish): PublicKey {\n  return validateAndParsePublicKey({ publicKey: mint, transformSol: true });\n}\n"],"mappings":"4ZAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,aAAAE,EAAA,qBAAAC,EAAA,YAAAC,EAAA,2BAAAC,EAAA,oBAAAC,EAAA,qBAAAC,EAAA,wBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,oBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,sBAAAC,EAAA,aAAAC,EAAA,aAAAC,EAAA,aAAAC,EAAA,aAAAC,EAAA,gBAAAC,EAAA,4BAAAC,EAAA,aAAAC,EAAA,cAAAC,EAAA,cAAAC,EAAA,sBAAAC,EAAA,8BAAAC,IAAA,eAAAC,EAAA3B,GAAA,IAAA4B,EAAiC,6BACjCC,EAA0E,2BAQnE,SAASC,EAAY,CAAE,OAAAC,EAAQ,SAAAC,EAAW,GAAO,WAAAC,EAAa,EAAK,EAAkC,CAC1G,MAAO,CACL,OAAAF,EACA,WAAAE,EACA,SAAAD,CACF,CACF,CAEO,IAAME,EAA0B,CACrCJ,EAAY,CAAE,OAAQ,mBAAkB,WAAY,EAAM,CAAC,EAC3DA,EAAY,CAAE,OAAQ,gBAAc,UAAW,WAAY,EAAM,CAAC,EAClEA,EAAY,CAAE,OAAQ,qBAAoB,WAAY,EAAM,CAAC,CAC/D,EAIO,SAASK,EAA0B,CACxC,UAAWC,EACX,aAAAC,CACF,EAGc,CACZ,IAAMC,EAAYC,EAAkBH,EAAU,SAAS,CAAC,EAExD,GAAIE,aAAqB,YACvB,OAAID,GAAgBC,EAAU,OAAOE,CAAO,EAAUC,EAC/CH,EAGT,GAAID,GAAgBC,EAAU,SAAS,IAAME,EAAQ,SAAS,EAAG,OAAOC,EAExE,GAAI,OAAOH,GAAc,SAAU,CACjC,GAAIA,IAAc,YAAU,QAAQ,SAAS,EAAG,OAAO,YAAU,QACjE,GAAI,CAEF,OADY,IAAI,YAAUA,CAAS,CAErC,MAAE,CACA,MAAM,IAAI,MAAM,oBAAoB,CACtC,CACF,CAEA,MAAM,IAAI,MAAM,oBAAoB,CACtC,CAEO,SAASC,EAAkBG,EAA+B,CAC/D,GAAI,CACF,OAAO,IAAI,YAAUA,CAAC,CACxB,MAAE,CACA,OAAOA,CACT,CACF,CAEO,IAAMC,EAAkB,IAAI,YAAU,6CAA6C,EAC7EC,EAAmB,IAAI,YAAU,6CAA6C,EAC9EC,EAAkB,IAAI,YAAU,6CAA6C,EAC7EC,EAAmB,IAAI,YAAU,6CAA6C,EAC9EC,EAAsB,IAAI,YAAU,6CAA6C,EACjFC,EAAyB,IAAI,YAAU,6CAA6C,EACpFC,EAAoB,gBAAc,UAElCC,EAAU,IAAI,YAAU,8CAA8C,EACtEC,EAAU,IAAI,YAAU,8CAA8C,EACtEC,EAAU,IAAI,YAAU,6CAA6C,EACrEC,EAAW,IAAI,YAAU,8CAA8C,EACvEC,EAAW,IAAI,YAAU,8CAA8C,EACvEC,EAAW,IAAI,YAAU,6CAA6C,EACtEC,EAAY,IAAI,YAAU,8CAA8C,EACxEC,EAAW,IAAI,YAAU,6CAA6C,EACtEC,EAAU,IAAI,YAAU,6CAA6C,EACrEC,EAAU,IAAI,YAAU,8CAA8C,EACtEC,EAAU,IAAI,YAAU,8CAA8C,EACtEnB,EAAW,IAAI,YAAU,6CAA6C,EACtED,EAAU,YAAU,QAE1B,SAASqB,EAAUC,EAA+B,CACvD,OAAO3B,EAA0B,CAAE,UAAW2B,EAAM,aAAc,EAAK,CAAC,CAC1E","names":["pubKey_exports","__export","ANAMint","CLOCK_PROGRAM_ID","ETHMint","INSTRUCTION_PROGRAM_ID","MEMO_PROGRAM_ID","MEMO_PROGRAM_ID2","METADATA_PROGRAM_ID","NRVMint","PAIMint","RAYMint","RENT_PROGRAM_ID","SOLMint","SRMMint","SYSTEM_PROGRAM_ID","USDCMint","USDHMint","USDTMint","WSOLMint","accountMeta","commonSystemAccountMeta","mSOLMint","solToWSol","stSOLMint","tryParsePublicKey","validateAndParsePublicKey","__toCommonJS","import_spl_token","import_web3","accountMeta","pubkey","isSigner","isWritable","commonSystemAccountMeta","validateAndParsePublicKey","orgPubKey","transformSol","publicKey","tryParsePublicKey","SOLMint","WSOLMint","v","MEMO_PROGRAM_ID","MEMO_PROGRAM_ID2","RENT_PROGRAM_ID","CLOCK_PROGRAM_ID","METADATA_PROGRAM_ID","INSTRUCTION_PROGRAM_ID","SYSTEM_PROGRAM_ID","RAYMint","PAIMint","SRMMint","USDCMint","USDTMint","mSOLMint","stSOLMint","USDHMint","NRVMint","ANAMint","ETHMint","solToWSol","mint"]}
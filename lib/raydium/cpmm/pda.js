var I=Object.create;var m=Object.defineProperty;var v=Object.getOwnPropertyDescriptor;var T=Object.getOwnPropertyNames;var E=Object.getPrototypeOf,R=Object.prototype.hasOwnProperty;var x=(t,e)=>{for(var r in e)m(t,r,{get:e[r],enumerable:!0})},p=(t,e,r,i)=>{if(e&&typeof e=="object"||typeof e=="function")for(let o of T(e))!R.call(t,o)&&o!==r&&m(t,o,{get:()=>e[o],enumerable:!(i=v(e,o))||i.enumerable});return t};var d=(t,e,r)=>(r=t!=null?I(E(t)):{},p(e||!t||!t.__esModule?m(r,"default",{value:t,enumerable:!0}):r,t)),_=t=>p(m({},"__esModule",{value:!0}),t);var H={};x(H,{getCpmmPdaAmmConfigId:()=>C,getCpmmPdaPoolId:()=>w,getCreatePoolKeys:()=>N,getPdaLpMint:()=>L,getPdaObservationId:()=>A,getPdaPoolAuthority:()=>P,getPdaVault:()=>g});module.exports=_(H);var n=require("@solana/web3.js"),k=require("@solana/spl-token");var u=require("lodash"),f=d(require("dayjs")),h=d(require("dayjs/plugin/utc"));f.default.extend(h.default);var l=class{constructor(e){this.logLevel=e.logLevel!==void 0?e.logLevel:0,this.name=e.name}set level(e){this.logLevel=e}get time(){return(0,f.default)().utc().format("YYYY/MM/DD HH:mm:ss UTC")}get moduleName(){return this.name}isLogLevel(e){return e<=this.logLevel}error(...e){return this.isLogLevel(0)?(console.error(this.time,this.name,"sdk logger error",...e),this):this}logWithError(...e){let r=e.map(i=>typeof i=="object"?JSON.stringify(i):i).join(", ");throw new Error(r)}warning(...e){return this.isLogLevel(1)?(console.warn(this.time,this.name,"sdk logger warning",...e),this):this}info(...e){return this.isLogLevel(2)?(console.info(this.time,this.name,"sdk logger info",...e),this):this}debug(...e){return this.isLogLevel(3)?(console.debug(this.time,this.name,"sdk logger debug",...e),this):this}},y={},O={};function b(t){let e=(0,u.get)(y,t);if(!e){let r=(0,u.get)(O,t);e=new l({name:t,logLevel:r}),(0,u.set)(y,t,e)}return e}var re=b("Raydium_txUtil");function a(t,e){let[r,i]=n.PublicKey.findProgramAddressSync(t,e);return{publicKey:r,nonce:i}}var F=Buffer.from("vault_and_lp_mint_auth_seed","utf8"),M=Buffer.from("amm_config","utf8"),D=Buffer.from("pool","utf8"),U=Buffer.from("pool_lp_mint","utf8"),W=Buffer.from("pool_vault","utf8"),q=Buffer.from("observation","utf8");function P(t){return a([F],t)}function C(t,e){return a([M,z(e)],t)}function w(t,e,r,i){return a([D,e.toBuffer(),r.toBuffer(),i.toBuffer()],t)}function L(t,e){return a([U,e.toBuffer()],t)}function g(t,e,r){return a([W,e.toBuffer(),r.toBuffer()],t)}function A(t,e){return a([q,e.toBuffer()],t)}function z(t){let e=new ArrayBuffer(2);return new DataView(e).setUint16(0,t,!1),new Uint8Array(e)}function N({programId:t,mintA:e,mintB:r}){let i=C(t,0).publicKey,o=P(t).publicKey,s=w(t,i,e,r).publicKey,S=L(t,s).publicKey,B=g(t,s,e).publicKey,K=g(t,s,r).publicKey,V=A(t,s).publicKey;return{poolId:s,configId:i,authority:o,lpMint:S,vaultA:B,vaultB:K,observationId:V}}0&&(module.exports={getCpmmPdaAmmConfigId,getCpmmPdaPoolId,getCreatePoolKeys,getPdaLpMint,getPdaObservationId,getPdaPoolAuthority,getPdaVault});
//# sourceMappingURL=pda.js.map
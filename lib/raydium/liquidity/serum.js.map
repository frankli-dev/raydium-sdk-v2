{"version":3,"sources":["../../../src/raydium/liquidity/serum.ts","../../../src/raydium/liquidity/constant.ts","../../../src/common/logger.ts"],"sourcesContent":["import { PublicKey } from \"@solana/web3.js\";\nimport { LIQUIDITY_VERSION_TO_SERUM_VERSION } from \"./constant\";\nimport { SerumVersion } from \"../serum\";\nimport { createLogger } from \"@/common/logger\";\n\nconst logger = createLogger(\"Raydium_liquidity_serum\");\n\nexport function getSerumVersion(version: number): SerumVersion {\n  const serumVersion = LIQUIDITY_VERSION_TO_SERUM_VERSION[version];\n  if (!serumVersion) logger.logWithError(\"invalid version\", \"version\", version);\n\n  return serumVersion;\n}\n\nexport function getSerumAssociatedAuthority({ programId, marketId }: { programId: PublicKey; marketId: PublicKey }): {\n  publicKey: PublicKey;\n  nonce: number;\n} {\n  const seeds = [marketId.toBuffer()];\n\n  let nonce = 0;\n  let publicKey: PublicKey;\n\n  while (nonce < 100) {\n    try {\n      const seedsWithNonce = seeds.concat(Buffer.from([nonce]), Buffer.alloc(7));\n      publicKey = PublicKey.createProgramAddressSync(seedsWithNonce, programId);\n    } catch (err) {\n      if (err instanceof TypeError) {\n        throw err;\n      }\n      nonce++;\n      continue;\n    }\n    return { publicKey, nonce };\n  }\n\n  logger.logWithError(\"unable to find a viable program address nonce\", \"params\", {\n    programId,\n    marketId,\n  });\n  throw new Error(\"unable to find a viable program address nonce\");\n}\n","import BN from \"bn.js\";\nimport { SerumVersion } from \"../serum\";\n\nexport const LIQUIDITY_FEES_NUMERATOR = new BN(25);\nexport const LIQUIDITY_FEES_DENOMINATOR = new BN(10000);\n\n// liquidity version => serum version\nexport const LIQUIDITY_VERSION_TO_SERUM_VERSION: {\n  [key in 4 | 5]?: SerumVersion;\n} = {\n  4: 3,\n  5: 3,\n};\n","import { get, set } from \"lodash\";\nimport dayjs from \"dayjs\";\nimport utc from \"dayjs/plugin/utc\";\ndayjs.extend(utc);\n\nexport type ModuleName = \"Common.Api\";\n\nexport enum LogLevel {\n  Error,\n  Warning,\n  Info,\n  Debug,\n}\nexport class Logger {\n  private logLevel: LogLevel;\n  private name: string;\n  constructor(params: { name: string; logLevel?: LogLevel }) {\n    this.logLevel = params.logLevel !== undefined ? params.logLevel : LogLevel.Error;\n    this.name = params.name;\n  }\n\n  set level(logLevel: LogLevel) {\n    this.logLevel = logLevel;\n  }\n  get time(): string {\n    return dayjs().utc().format(\"YYYY/MM/DD HH:mm:ss UTC\");\n  }\n  get moduleName(): string {\n    return this.name;\n  }\n\n  private isLogLevel(level: LogLevel): boolean {\n    return level <= this.logLevel;\n  }\n\n  public error(...props): Logger {\n    if (!this.isLogLevel(LogLevel.Error)) return this;\n    console.error(this.time, this.name, \"sdk logger error\", ...props);\n    return this;\n  }\n\n  public logWithError(...props): Logger {\n    // this.error(...props)\n    const msg = props.map((arg) => (typeof arg === \"object\" ? JSON.stringify(arg) : arg)).join(\", \");\n    throw new Error(msg);\n  }\n\n  public warning(...props): Logger {\n    if (!this.isLogLevel(LogLevel.Warning)) return this;\n    console.warn(this.time, this.name, \"sdk logger warning\", ...props);\n    return this;\n  }\n\n  public info(...props): Logger {\n    if (!this.isLogLevel(LogLevel.Info)) return this;\n    console.info(this.time, this.name, \"sdk logger info\", ...props);\n    return this;\n  }\n\n  public debug(...props): Logger {\n    if (!this.isLogLevel(LogLevel.Debug)) return this;\n    console.debug(this.time, this.name, \"sdk logger debug\", ...props);\n    return this;\n  }\n}\n\nconst moduleLoggers: { [key in ModuleName]?: Logger } = {};\nconst moduleLevels: { [key in ModuleName]?: LogLevel } = {};\n\nexport function createLogger(moduleName: string): Logger {\n  let logger = get(moduleLoggers, moduleName);\n  if (!logger) {\n    // default level is error\n    const logLevel = get(moduleLevels, moduleName);\n\n    logger = new Logger({ name: moduleName, logLevel });\n    set(moduleLoggers, moduleName, logger);\n  }\n\n  return logger;\n}\n\nexport function setLoggerLevel(moduleName: string, level: LogLevel): void {\n  set(moduleLevels, moduleName, level);\n\n  const logger = get(moduleLoggers, moduleName);\n  if (logger) logger.level = level;\n}\n"],"mappings":"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","names":["serum_exports","__export","getSerumAssociatedAuthority","getSerumVersion","__toCommonJS","import_web3","import_bn","LIQUIDITY_FEES_NUMERATOR","BN","LIQUIDITY_FEES_DENOMINATOR","LIQUIDITY_VERSION_TO_SERUM_VERSION","import_lodash","import_dayjs","import_utc","dayjs","utc","Logger","params","logLevel","dayjs","level","props","msg","arg","moduleLoggers","moduleLevels","createLogger","moduleName","logger","logger","createLogger","getSerumVersion","version","serumVersion","LIQUIDITY_VERSION_TO_SERUM_VERSION","getSerumAssociatedAuthority","programId","marketId","seeds","nonce","publicKey","seedsWithNonce","err"]}
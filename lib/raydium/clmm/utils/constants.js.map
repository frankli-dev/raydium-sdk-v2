{"version":3,"sources":["../../../../src/raydium/clmm/utils/constants.ts"],"sourcesContent":["import BN from \"bn.js\";\n\nexport const ZERO = new BN(0);\nexport const ONE = new BN(1);\nexport const NEGATIVE_ONE = new BN(-1);\n\nexport const Q64 = new BN(1).shln(64);\nexport const Q128 = new BN(1).shln(128);\n\nexport const MaxU64 = Q64.sub(ONE);\n\nexport const U64Resolution = 64;\n\nexport const MaxUint128 = Q128.subn(1);\n\nexport const MIN_TICK = -443636;\nexport const MAX_TICK = -MIN_TICK;\n\nexport const MIN_SQRT_PRICE_X64: BN = new BN(\"4295048016\");\nexport const MAX_SQRT_PRICE_X64: BN = new BN(\"79226673521066979257578248091\");\n\n// export const MIN_TICK_ARRAY_START_INDEX = -307200;\n// export const MAX_TICK_ARRAY_START_INDEX = 306600;\n\nexport const BIT_PRECISION = 16;\nexport const LOG_B_2_X32 = \"59543866431248\";\nexport const LOG_B_P_ERR_MARGIN_LOWER_X64 = \"184467440737095516\";\nexport const LOG_B_P_ERR_MARGIN_UPPER_X64 = \"15793534762490258745\";\n\nexport const FEE_RATE_DENOMINATOR = new BN(10).pow(new BN(6));\n\nexport enum Fee {\n  rate_500 = 500, //  500 / 10e6 = 0.0005\n  rate_3000 = 3000, // 3000/ 10e6 = 0.003\n  rate_10000 = 10000, // 10000 /10e6 = 0.01\n}\nexport const TICK_SPACINGS: { [amount in Fee]: number } = {\n  [Fee.rate_500]: 10,\n  [Fee.rate_3000]: 60,\n  [Fee.rate_10000]: 200,\n};\n\nexport const mockCreatePoolInfo = {\n  version: 6,\n  liquidity: ZERO,\n  tickCurrent: 0,\n  observationIndex: 0,\n  observationUpdateDuration: 0,\n  feeGrowthGlobalX64A: ZERO,\n  feeGrowthGlobalX64B: ZERO,\n  protocolFeesTokenA: ZERO,\n  protocolFeesTokenB: ZERO,\n  swapInAmountTokenA: ZERO,\n  swapOutAmountTokenB: ZERO,\n  swapInAmountTokenB: ZERO,\n  swapOutAmountTokenA: ZERO,\n  tickArrayBitmap: [],\n\n  rewardInfos: [],\n\n  day: {\n    volume: 0,\n    volumeFee: 0,\n    feeA: 0,\n    feeB: 0,\n    feeApr: 0,\n    rewardApr: { A: 0, B: 0, C: 0 },\n    apr: 0,\n    priceMax: 0,\n    priceMin: 0,\n  },\n  week: {\n    volume: 0,\n    volumeFee: 0,\n    feeA: 0,\n    feeB: 0,\n    feeApr: 0,\n    rewardApr: { A: 0, B: 0, C: 0 },\n    apr: 0,\n    priceMax: 0,\n    priceMin: 0,\n  },\n  month: {\n    volume: 0,\n    volumeFee: 0,\n    feeA: 0,\n    feeB: 0,\n    feeApr: 0,\n    rewardApr: { A: 0, B: 0, C: 0 },\n    apr: 0,\n    priceMax: 0,\n    priceMin: 0,\n  },\n  tvl: 0,\n};\n\nexport const mockV3CreatePoolInfo = {\n  tvl: 0,\n  volumeQuote: 0,\n  mintAmountA: 0,\n  mintAmountB: 0,\n  rewardDefaultInfos: [],\n  farmUpcomingCount: 0,\n  farmOngoingCount: 0,\n  farmFinishedCount: 0,\n\n  day: {\n    volume: 0,\n    volumeQuote: 0,\n    volumeFee: 0,\n    apr: 0,\n    feeApr: 0,\n    priceMin: 0,\n    priceMax: 0,\n    rewardApr: [0],\n  },\n  week: {\n    volume: 0,\n    volumeQuote: 0,\n    volumeFee: 0,\n    apr: 0,\n    feeApr: 0,\n    priceMin: 0,\n    priceMax: 0,\n    rewardApr: [0],\n  },\n  month: {\n    volume: 0,\n    volumeQuote: 0,\n    volumeFee: 0,\n    apr: 0,\n    feeApr: 0,\n    priceMin: 0,\n    priceMax: 0,\n    rewardApr: [0],\n  },\n  pooltype: [],\n};\n\nexport const U64_IGNORE_RANGE = new BN(\"18446744073700000000\");\n"],"mappings":"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","names":["constants_exports","__export","BIT_PRECISION","FEE_RATE_DENOMINATOR","Fee","LOG_B_2_X32","LOG_B_P_ERR_MARGIN_LOWER_X64","LOG_B_P_ERR_MARGIN_UPPER_X64","MAX_SQRT_PRICE_X64","MAX_TICK","MIN_SQRT_PRICE_X64","MIN_TICK","MaxU64","MaxUint128","NEGATIVE_ONE","ONE","Q128","Q64","TICK_SPACINGS","U64Resolution","U64_IGNORE_RANGE","ZERO","mockCreatePoolInfo","mockV3CreatePoolInfo","__toCommonJS","import_bn","ZERO","BN","ONE","NEGATIVE_ONE","Q64","Q128","MaxU64","U64Resolution","MaxUint128","MIN_TICK","MAX_TICK","MIN_SQRT_PRICE_X64","MAX_SQRT_PRICE_X64","BIT_PRECISION","LOG_B_2_X32","LOG_B_P_ERR_MARGIN_LOWER_X64","LOG_B_P_ERR_MARGIN_UPPER_X64","FEE_RATE_DENOMINATOR","Fee","TICK_SPACINGS","mockCreatePoolInfo","mockV3CreatePoolInfo","U64_IGNORE_RANGE"]}
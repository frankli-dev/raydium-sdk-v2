{"version":3,"sources":["../../../../src/raydium/clmm/utils/util.ts"],"sourcesContent":["import BN from \"bn.js\";\nexport function u16ToBytes(num: number): Uint8Array {\n  const arr = new ArrayBuffer(2);\n  const view = new DataView(arr);\n  view.setUint16(0, num, false);\n  return new Uint8Array(arr);\n}\n\nexport function i16ToBytes(num: number): Uint8Array {\n  const arr = new ArrayBuffer(2);\n  const view = new DataView(arr);\n  view.setInt16(0, num, false);\n  return new Uint8Array(arr);\n}\n\nexport function u32ToBytes(num: number): Uint8Array {\n  const arr = new ArrayBuffer(4);\n  const view = new DataView(arr);\n  view.setUint32(0, num, false);\n  return new Uint8Array(arr);\n}\n\nexport function i32ToBytes(num: number): Uint8Array {\n  const arr = new ArrayBuffer(4);\n  const view = new DataView(arr);\n  view.setInt32(0, num, false);\n  return new Uint8Array(arr);\n}\n\nexport function leadingZeros(bitNum: number, data: BN): number {\n  let i = 0;\n  for (let j = bitNum - 1; j >= 0; j--) {\n    if (!data.testn(j)) {\n      i++;\n    } else {\n      break;\n    }\n  }\n  return i;\n}\n\nexport function trailingZeros(bitNum: number, data: BN) {\n  let i = 0;\n  for (let j = 0; j < bitNum; j++) {\n    if (!data.testn(j)) {\n      i++;\n    } else {\n      break;\n    }\n  }\n  return i;\n}\n\nexport function isZero(bitNum: number, data: BN): boolean {\n  for (let i = 0; i < bitNum; i++) {\n    if (data.testn(i)) return false;\n  }\n  return true;\n}\n\nexport function mostSignificantBit(bitNum: number, data: BN): number | null {\n  if (isZero(bitNum, data)) return null;\n  else return leadingZeros(bitNum, data);\n}\n\nexport function leastSignificantBit(bitNum: number, data: BN): number | null {\n  if (isZero(bitNum, data)) return null;\n  else return trailingZeros(bitNum, data);\n}\n"],"mappings":"AACO,SAASA,EAAWC,EAAyB,CAClD,IAAMC,EAAM,IAAI,YAAY,CAAC,EAE7B,OADa,IAAI,SAASA,CAAG,EACxB,UAAU,EAAGD,EAAK,EAAK,EACrB,IAAI,WAAWC,CAAG,CAC3B,CAEO,SAASC,EAAWF,EAAyB,CAClD,IAAMC,EAAM,IAAI,YAAY,CAAC,EAE7B,OADa,IAAI,SAASA,CAAG,EACxB,SAAS,EAAGD,EAAK,EAAK,EACpB,IAAI,WAAWC,CAAG,CAC3B,CAEO,SAASE,EAAWH,EAAyB,CAClD,IAAMC,EAAM,IAAI,YAAY,CAAC,EAE7B,OADa,IAAI,SAASA,CAAG,EACxB,UAAU,EAAGD,EAAK,EAAK,EACrB,IAAI,WAAWC,CAAG,CAC3B,CAEO,SAASG,EAAWJ,EAAyB,CAClD,IAAMC,EAAM,IAAI,YAAY,CAAC,EAE7B,OADa,IAAI,SAASA,CAAG,EACxB,SAAS,EAAGD,EAAK,EAAK,EACpB,IAAI,WAAWC,CAAG,CAC3B,CAEO,SAASI,EAAaC,EAAgBC,EAAkB,CAC7D,IAAIC,EAAI,EACR,QAASC,EAAIH,EAAS,EAAGG,GAAK,GACxB,CAACF,EAAK,MAAME,CAAC,EADcA,IAE7BD,IAKJ,OAAOA,CACT,CAEO,SAASE,EAAcJ,EAAgBC,EAAU,CACtD,IAAIC,EAAI,EACR,QAASC,EAAI,EAAGA,EAAIH,GACd,CAACC,EAAK,MAAME,CAAC,EADSA,IAExBD,IAKJ,OAAOA,CACT,CAEO,SAASG,EAAOL,EAAgBC,EAAmB,CACxD,QAASC,EAAI,EAAGA,EAAIF,EAAQE,IAC1B,GAAID,EAAK,MAAMC,CAAC,EAAG,MAAO,GAE5B,MAAO,EACT,CAEO,SAASI,EAAmBN,EAAgBC,EAAyB,CAC1E,OAAII,EAAOL,EAAQC,CAAI,EAAU,KACrBF,EAAaC,EAAQC,CAAI,CACvC,CAEO,SAASM,EAAoBP,EAAgBC,EAAyB,CAC3E,OAAII,EAAOL,EAAQC,CAAI,EAAU,KACrBG,EAAcJ,EAAQC,CAAI,CACxC","names":["u16ToBytes","num","arr","i16ToBytes","u32ToBytes","i32ToBytes","leadingZeros","bitNum","data","i","j","trailingZeros","isZero","mostSignificantBit","leastSignificantBit"]}